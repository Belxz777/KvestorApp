"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@pbe+react-yandex-maps@1.2.5_react@18.2.0";
exports.ids = ["vendor-chunks/@pbe+react-yandex-maps@1.2.5_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@pbe+react-yandex-maps@1.2.5_react@18.2.0/node_modules/@pbe/react-yandex-maps/dist/react-yandex-maps.esm.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@pbe+react-yandex-maps@1.2.5_react@18.2.0/node_modules/@pbe/react-yandex-maps/dist/react-yandex-maps.esm.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ D),\n/* harmony export */   Circle: () => (/* binding */ tt),\n/* harmony export */   Clusterer: () => (/* binding */ V),\n/* harmony export */   FullscreenControl: () => (/* binding */ B),\n/* harmony export */   GeoObject: () => (/* binding */ X),\n/* harmony export */   GeolocationControl: () => (/* binding */ A),\n/* harmony export */   ListBox: () => (/* binding */ L),\n/* harmony export */   ListBoxItem: () => (/* binding */ $),\n/* harmony export */   Map: () => (/* binding */ k),\n/* harmony export */   ObjectManager: () => (/* binding */ J),\n/* harmony export */   Panorama: () => (/* binding */ T),\n/* harmony export */   Placemark: () => (/* binding */ et),\n/* harmony export */   Polygon: () => (/* binding */ nt),\n/* harmony export */   Polyline: () => (/* binding */ ot),\n/* harmony export */   Rectangle: () => (/* binding */ st),\n/* harmony export */   RouteButton: () => (/* binding */ N),\n/* harmony export */   RouteEditor: () => (/* binding */ Z),\n/* harmony export */   RoutePanel: () => (/* binding */ z),\n/* harmony export */   RulerControl: () => (/* binding */ G),\n/* harmony export */   SearchControl: () => (/* binding */ I),\n/* harmony export */   TrafficControl: () => (/* binding */ W),\n/* harmony export */   TypeSelector: () => (/* binding */ F),\n/* harmony export */   YMaps: () => (/* binding */ y),\n/* harmony export */   ZoomControl: () => (/* binding */ q),\n/* harmony export */   useYMaps: () => (/* binding */ p),\n/* harmony export */   withYMaps: () => (/* binding */ d)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.0.4_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction r() {\n    return r = Object.assign ? Object.assign.bind() : function(t) {\n        for(var e = 1; e < arguments.length; e++){\n            var n = arguments[e];\n            for(var o in n)Object.prototype.hasOwnProperty.call(n, o) && (t[o] = n[o]);\n        }\n        return t;\n    }, r.apply(this, arguments);\n}\nconst a = (t, e)=>{\n    const n = {};\n    for(const o in t)-1 === e.indexOf(o) && (n[o] = t[o]);\n    return n;\n}, i = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null), c = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null), l = (e)=>(n)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(c.Consumer, null, (o)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(e, r({\n                parent: o\n            }, n))), p = (t = [])=>{\n    const [r, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(t), l = (()=>{\n        const t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(i);\n        if (null === t) throw new Error(\"Couldn't find Yandex.Maps API in the context. Make sure that hook useYMaps is inside <YMaps /> provider\");\n        return t;\n    })(), p = l.getApi();\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        l.load().then(()=>Promise.all(c.current.map(l.loadModule))).then(()=>a(!0));\n    }, []), r && p ? p : null;\n}, u = ()=>{}, m = [\n    \"onLoad\",\n    \"onError\",\n    \"modules\",\n    \"apiLoader\"\n];\nfunction d(e, n = !1, o = []) {\n    return (i)=>{\n        const { width: c, height: l, modules: d = [], onLoad: h = u } = i, f = p(o.concat(d)), y = !n || !!f, b = a(i, m);\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>f ? h(f) : void 0, [\n            f\n        ]), y ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(e, r({\n            ymaps: f\n        }, b)) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n            style: {\n                width: c,\n                height: l\n            }\n        });\n    };\n}\nconst h = \"undefined\" != \"undefined\", f = {\n    lang: \"ru_RU\",\n    load: \"\",\n    ns: \"\",\n    mode: \"release\"\n}, y = (e)=>{\n    const { version: n = \"2.1\", enterprise: r = !1, query: a = {\n        lang: \"ru_RU\",\n        load: \"\",\n        ns: \"\"\n    }, preload: c = !1, children: l } = e, p = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(((t)=>{\n        const { query: e = f } = t, n = Date.now().toString(32), o = e.ns || \"\", s = \"__yandex-maps-api-onload__$$\" + n, r = \"__yandex-maps-api-onerror__$$\" + n, a = h ? window : {}, i = {};\n        let c;\n        const l = ()=>o ? a[o] : c, p = ()=>{\n            delete a[s], delete a[r];\n        };\n        return {\n            load: ()=>{\n                if (l()) return Promise.resolve(c);\n                if (i[o]) return i[o];\n                const n = {\n                    onload: s,\n                    onerror: r,\n                    ...f,\n                    ...e\n                }, u = Object.keys(n).map((t)=>`${t}=${n[t]}`).join(\"&\"), m = [\n                    `https://${t.enterprise ? \"enterprise.\" : \"\"}api-maps.yandex.ru`,\n                    t.version,\n                    \"?\" + u\n                ].join(\"/\");\n                return i[o] = new Promise((t, e)=>{\n                    a[s] = (e)=>{\n                        p(), e.ready(()=>{\n                            c = e, t(e);\n                        });\n                    }, a[r] = (t)=>{\n                        p(), e(t);\n                    }, ((t)=>new Promise((e, n)=>{\n                            const o = document.createElement(\"script\");\n                            o.type = \"text/javascript\", o.onload = e, o.onerror = n, o.src = t, o.async = !0, document.head.appendChild(o);\n                        }))(m).catch(a[r]);\n                }), i[o];\n            },\n            getApi: l,\n            loadModule: (t)=>new Promise((e, n)=>{\n                    c.modules.require(t).done((n)=>{\n                        n.forEach((e)=>{\n                            ((t, e, n, o = !1)=>{\n                                const s = \"string\" == typeof e ? e.split(\".\") : e.slice();\n                                let r, a = t;\n                                for(; s.length > 1;)r = s.shift(), a[r] || (a[r] = {}), a = a[r];\n                                const i = s[0];\n                                a[i] = !0 === o && a[i] || n;\n                            })(c, t, e, !0);\n                        }), e(c);\n                    }, n);\n                })\n        };\n    })({\n        version: n,\n        enterprise: r,\n        query: a,\n        preload: c\n    }));\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        c && p.current.load();\n    }, [\n        p.current\n    ]), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(i.Provider, {\n        value: p.current\n    }, l);\n}, b = /^on(?=[A-Z])/;\nfunction v(t) {\n    return Object.keys(t).reduce((e, n)=>{\n        if (b.test(n)) {\n            const o = n.replace(b, \"\").toLowerCase();\n            e._events[o] = t[n];\n        } else e[n] = t[n];\n        return e;\n    }, {\n        _events: {}\n    });\n}\nfunction j(t, e, n) {\n    \"function\" == typeof n && t.events.add(e, n);\n}\nfunction O(t, e, n) {\n    \"function\" == typeof n && t.events.remove(e, n);\n}\nfunction g(t, e, n) {\n    Object.keys(Object.assign({}, e, n)).forEach((o)=>{\n        e[o] !== n[o] && (O(t, o, e[o]), j(t, o, n[o]));\n    });\n}\nconst E = (t)=>\"default\" + t.charAt(0).toUpperCase() + t.slice(1);\nfunction C(t, e) {\n    return void 0 !== t[e] || void 0 === t[E(e)];\n}\nfunction _(t, e, n) {\n    return (C(t, e) ? t[e] : t[E(e)]) || n;\n}\nfunction R(t, e, n = null) {\n    if (t !== e) {\n        if (t && (\"current\" in t ? t.current = null : \"function\" == typeof t && t(null)), !e) return;\n        \"current\" in e ? e.current = n : \"function\" == typeof e && e(n);\n    }\n}\nfunction w(t) {\n    const { width: e, height: n, style: o, className: s } = t;\n    return void 0 !== o || void 0 !== s ? Object.assign({}, o && {\n        style: o\n    }, s && {\n        className: s\n    }) : {\n        style: {\n            width: e,\n            height: n\n        }\n    };\n}\nclass P extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(t){\n        super(t), this.state = {\n            error: null,\n            errorInfo: null\n        };\n    }\n    componentDidCatch(t, e) {\n        const { onError: n = ()=>{} } = this.props;\n        n(t), this.setState({\n            error: t,\n            errorInfo: e\n        });\n    }\n    render() {\n        return this.state.error ? null : this.props.children;\n    }\n}\nconst x = (e)=>({ onError: n, ...o })=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(P, {\n            onError: n\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(e, o));\nclass M extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(){\n        super(), this.instance = null, this.state = {\n            instance: null\n        }, this._parentElement = null, this._getRef = (t)=>{\n            this._parentElement = t;\n        };\n    }\n    componentDidMount() {\n        this.instance = M.mountObject(this._parentElement, this.props.ymaps.Map, this.props), this.setState({\n            instance: this.instance\n        });\n    }\n    componentDidUpdate(t) {\n        null !== this.instance && M.updateObject(this.instance, t, this.props);\n    }\n    componentWillUnmount() {\n        M.unmountObject(this.instance, this.props);\n    }\n    render() {\n        const e = w(this.props), n = v(this.props), o = a(n, [\n            \"_events\",\n            \"state\",\n            \"defaultState\",\n            \"options\",\n            \"defaultOptions\",\n            \"instanceRef\",\n            \"ymaps\",\n            \"children\",\n            \"width\",\n            \"height\",\n            \"style\",\n            \"className\"\n        ]); /*#__PURE__*/ \n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(c.Provider, {\n            value: this.state.instance\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", r({\n            ref: this._getRef\n        }, e, o), this.props.children));\n    }\n    static mountObject(t, e, n) {\n        const { instanceRef: o, _events: s } = v(n), r = new e(t, _(n, \"state\"), _(n, \"options\"));\n        return Object.keys(s).forEach((t)=>j(r, t, s[t])), R(null, o, r), r;\n    }\n    static updateObject(t, e, n) {\n        const { _events: o, instanceRef: s } = v(n), { _events: r, instanceRef: a } = v(e);\n        if (C(n, \"state\")) {\n            const o = _(e, \"state\", {}), s = _(n, \"state\", {});\n            o.type !== s.type && t.setType(s.type), o.behaviors !== s.behaviors && (o.behaviors && t.behaviors.disable(o.behaviors), s.behaviors && t.behaviors.enable(s.behaviors)), s.zoom && o.zoom !== s.zoom && t.setZoom(s.zoom), s.center && o.center !== s.center && t.setCenter(s.center), s.bounds && o.bounds !== s.bounds && t.setBounds(s.bounds);\n        }\n        if (C(n, \"options\")) {\n            const o = _(e, \"options\"), s = _(n, \"options\", {});\n            o !== s && t.options.set(s);\n        }\n        _(e, \"width\") === _(n, \"width\") && _(e, \"height\") === _(n, \"height\") || t.container.fitToViewport(), g(t, r, o), R(a, s, t);\n    }\n    static unmountObject(t, e) {\n        const { instanceRef: n, _events: o } = v(e);\n        null !== t && (Object.keys(o).forEach((e)=>O(t, e, o[e])), t.destroy(), R(n));\n    }\n}\nconst k = x(d(M, !0, [\n    \"Map\"\n]));\nk.defaultProps = {\n    width: 320,\n    height: 240\n};\nclass S extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(){\n        super(), this.state = {\n            instance: null\n        }, this._parentElement = null, this._getRef = (t)=>{\n            this._parentElement = t;\n        };\n    }\n    componentDidMount() {\n        this._mounted = !0, this.props.ymaps.panorama.isSupported() && S.mountObject(this._parentElement, this.props.ymaps.panorama, this.props).then((t)=>this._mounted && this.setState({\n                instance: t\n            }));\n    }\n    componentDidUpdate(t) {\n        null !== this.state.instance && S.updateObject(this.state.instance, t, this.props);\n    }\n    componentWillUnmount() {\n        this._mounted = !1, S.unmountObject(this.state.instance, this.props);\n    }\n    render() {\n        const e = w(this.props); /*#__PURE__*/ \n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", r({\n            ref: this._getRef\n        }, e));\n    }\n    static mountObject(t, e, n) {\n        const { instanceRef: o, _events: s } = v(n), r = _(n, \"point\"), a = _(n, \"locateOptions\"), i = _(n, \"options\");\n        return new Promise((n, c)=>{\n            e.locate(r, a).done((r)=>{\n                if (r.length > 0) {\n                    const a = new e.Player(t, r[0], i);\n                    R(null, o, a), Object.keys(s).forEach((t)=>j(a, t, s[t])), n(a);\n                }\n            }, c);\n        });\n    }\n    static updateObject(t, e, n) {\n        const { _events: o, instanceRef: s } = v(n), { _events: r, instanceRef: a } = v(e);\n        if (C(n, \"options\")) {\n            const o = _(e, \"options\"), s = _(n, \"options\");\n            o !== s && t.options.set(s);\n        }\n        if (C(n, \"point\")) {\n            const o = _(n, \"point\"), s = _(e, \"point\"), r = _(n, \"locateOptions\");\n            o !== s && t.moveTo(o, r);\n        }\n        g(t, r, o), R(a, s, t);\n    }\n    static unmountObject(t, e) {\n        const { instanceRef: n, _events: o } = v(e);\n        null !== t && (Object.keys(o).forEach((e)=>O(t, e, o[e])), R(n));\n    }\n}\nconst T = x(d(S, !0, [\n    \"panorama.isSupported\",\n    \"panorama.locate\",\n    \"panorama.createPlayer\",\n    \"panorama.Player\"\n]));\nT.defaultProps = {\n    width: 320,\n    height: 240\n};\nclass U extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(){\n        super(), this.state = {\n            instance: null\n        }, this.instance = null;\n    }\n    componentDidMount() {\n        const t = U.mountControl(this.props.ymaps.control[this.props.name], this.props);\n        this.instance = t, this.setState({\n            instance: t\n        });\n    }\n    componentDidUpdate(t) {\n        null !== this.instance && U.updateControl(this.instance, t, this.props);\n    }\n    componentWillUnmount() {\n        U.unmountControl(this.instance, this.props);\n    }\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(c.Provider, {\n            value: this.state.instance\n        }, this.props.children);\n    }\n    static mountControl(t, e) {\n        const { instanceRef: n, parent: o, lazy: s, _events: r } = v(e), a = new t({\n            data: _(e, \"data\"),\n            options: _(e, \"options\"),\n            state: _(e, \"state\"),\n            mapTypes: _(e, \"mapTypes\"),\n            lazy: s\n        });\n        if (Object.keys(r).forEach((t)=>j(a, t, r[t])), o && o.controls && \"function\" == typeof o.controls.add) o.controls.add(a);\n        else {\n            if (!o || !o.add || \"function\" != typeof o.add) throw new Error(`No parent found to mount ${e.name}`);\n            o.add(a);\n        }\n        return R(null, n, a), a;\n    }\n    static updateControl(t, e, n) {\n        const { _events: o, instanceRef: s } = v(n), { _events: r, instanceRef: a } = v(e);\n        if (C(n, \"options\")) {\n            const o = _(e, \"options\"), s = _(n, \"options\");\n            o !== s && t.options.set(s);\n        }\n        if (C(n, \"data\")) {\n            const o = _(e, \"data\"), s = _(n, \"data\");\n            o !== s && t.data.set(s);\n        }\n        if (C(n, \"state\")) {\n            const o = _(e, \"state\"), s = _(n, \"state\");\n            o !== s && t.state.set(s);\n        }\n        if (C(n, \"mapTypes\")) {\n            const o = _(e, \"mapTypes\"), s = _(n, \"mapTypes\");\n            o !== s && (t.removeAllMapTypes(), s.forEach((e)=>t.addMapType(e)));\n        }\n        g(t, r, o), R(a, s, t);\n    }\n    static unmountControl(t, e) {\n        const { instanceRef: n, parent: o, _events: s } = v(e);\n        null !== t && (Object.keys(s).forEach((e)=>O(t, e, s[e])), o.controls && \"function\" == typeof o.controls.remove ? o.controls.remove(t) : o.remove && \"function\" == typeof o.remove && o.remove(t), R(n));\n    }\n}\nvar D = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"Button\"\n    })), !0, [\n    \"control.Button\"\n]))), B = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"FullscreenControl\"\n    })), !0, [\n    \"control.FullscreenControl\"\n]))), A = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"GeolocationControl\"\n    })), !0, [\n    \"control.GeolocationControl\"\n]))), L = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"ListBox\"\n    })), !0, [\n    \"control.ListBox\"\n]))), $ = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"ListBoxItem\"\n    })), !0, [\n    \"control.ListBoxItem\"\n]))), N = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"RouteButton\"\n    })), !0, [\n    \"control.RouteButton\"\n]))), Z = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"RouteEditor\"\n    })), !0, [\n    \"control.RouteEditor\"\n]))), z = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"RoutePanel\"\n    })), !0, [\n    \"control.RoutePanel\"\n]))), G = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"RulerControl\"\n    })), !0, [\n    \"control.RulerControl\"\n]))), I = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"SearchControl\"\n    })), !0, [\n    \"control.SearchControl\"\n]))), W = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"TrafficControl\"\n    })), !0, [\n    \"control.TrafficControl\"\n]))), F = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"TypeSelector\"\n    })), !0, [\n    \"control.TypeSelector\"\n]))), q = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(U, r({}, e, {\n        name: \"ZoomControl\"\n    })), !0, [\n    \"control.ZoomControl\"\n])));\nclass Y extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(){\n        super(), this.state = {\n            instance: null\n        }, this.instance = null;\n    }\n    componentDidMount() {\n        const t = Y.mountObject(this.props.ymaps.Clusterer, this.props);\n        this.instance = t, this.setState({\n            instance: t\n        });\n    }\n    componentDidUpdate(t) {\n        null !== this.state.instance && Y.updateObject(this.instance, t, this.props);\n    }\n    componentWillUnmount() {\n        Y.unmountObject(this.instance, this.props);\n    }\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(c.Provider, {\n            value: this.state.instance\n        }, this.props.children);\n    }\n    static mountObject(t, e) {\n        const { instanceRef: n, parent: o, _events: s } = v(e), r = new t(_(e, \"options\"));\n        if (Object.keys(s).forEach((t)=>j(r, t, s[t])), o.geoObjects && \"function\" == typeof o.geoObjects.add) o.geoObjects.add(r);\n        else {\n            if (!o.add || \"function\" != typeof o.add) throw new Error(\"No parent found to mount Clusterer\");\n            o.add(r);\n        }\n        return R(null, n, r), r;\n    }\n    static updateObject(t, e, n) {\n        const { _events: o, instanceRef: s } = v(n), { _events: r, instanceRef: a } = v(e);\n        if (C(n, \"options\")) {\n            const o = _(e, \"options\"), s = _(n, \"options\");\n            o !== s && t.options.set(s);\n        }\n        g(t, r, o), R(a, s, t);\n    }\n    static unmountObject(t, e) {\n        const { instanceRef: n, parent: o, _events: s } = v(e);\n        null !== t && (Object.keys(s).forEach((e)=>O(t, e, s[e])), o.geoObjects && \"function\" == typeof o.geoObjects.remove ? o.geoObjects.remove(t) : o.remove && \"function\" == typeof o.remove && o.remove(t), R(n));\n    }\n}\nvar V = x(l(d(Y, !0, [\n    \"Clusterer\"\n])));\nclass H extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(){\n        super(), this.state = {\n            instance: null\n        };\n    }\n    componentDidMount() {\n        const t = H.mountObject(this.props.ymaps.ObjectManager, this.props);\n        this.instance = t, this.setState({\n            instance: t\n        });\n    }\n    componentDidUpdate(t) {\n        null !== this.instance && H.updateObject(this.instance, t, this.props);\n    }\n    componentWillUnmount() {\n        H.unmountObject(this.instance, this.props);\n    }\n    render() {\n        return null;\n    }\n    static mountObject(t, e) {\n        const { instanceRef: n, parent: o, _events: s } = v(e), r = _(e, \"options\", {}), a = _(e, \"features\", {}), i = _(e, \"filter\", null), c = _(e, \"objects\", {}), l = _(e, \"clusters\", {}), p = new t(r);\n        if (p.add(a || []), p.setFilter(i), p.objects.options.set(c), p.clusters.options.set(l), Object.keys(s).forEach((t)=>j(p, t, s[t])), o.geoObjects && \"function\" == typeof o.geoObjects.add) o.geoObjects.add(p);\n        else {\n            if (!o.add || \"function\" != typeof o.add) throw new Error(\"No parent found to mount ObjectManager\");\n            o.add(p);\n        }\n        return R(null, n, p), p;\n    }\n    static updateObject(t, e, n) {\n        const { _events: o, instanceRef: s } = v(n), { _events: r, instanceRef: a } = v(e);\n        if (C(n, \"options\")) {\n            const o = _(e, \"options\"), s = _(n, \"options\");\n            o !== s && t.options.set(s);\n        }\n        if (C(n, \"objects\")) {\n            const o = _(e, \"objects\"), s = _(n, \"objects\");\n            o !== s && t.objects.options.set(s);\n        }\n        if (C(n, \"clusters\")) {\n            const o = _(e, \"clusters\"), s = _(n, \"clusters\");\n            o !== s && t.clusters.options.set(s);\n        }\n        if (C(n, \"filter\")) {\n            const o = _(e, \"filter\"), s = _(n, \"filter\");\n            o !== s && t.setFilter(s);\n        }\n        if (C(n, \"features\")) {\n            const o = _(e, \"features\"), s = _(n, \"features\");\n            o !== s && (t.remove(o), t.add(s));\n        }\n        g(t, r, o), R(a, s, t);\n    }\n    static unmountObject(t, e) {\n        const { instanceRef: n, parent: o, _events: s } = v(e);\n        null !== t && (Object.keys(s).forEach((e)=>O(t, e, s[e])), o.geoObjects && \"function\" == typeof o.geoObjects.remove ? o.geoObjects.remove(t) : o.remove && \"function\" == typeof o.remove && o.remove(t), R(n));\n    }\n}\nvar J = x(l(d(H, !0, [\n    \"ObjectManager\"\n])));\nclass K extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(){\n        super(), this.state = {\n            instance: null\n        }, this.instance = null;\n    }\n    componentDidMount() {\n        const { name: t, ymaps: e, dangerZone: n } = this.props, o = K.mountObject(n && \"function\" == typeof n.modifyConstructor ? n.modifyConstructor(e[t]) : e[t], this.props);\n        this.instance = o, this.setState({\n            instance: o\n        });\n    }\n    componentDidUpdate(t) {\n        null !== this.instance && K.updateObject(this.instance, t, this.props);\n    }\n    componentWillUnmount() {\n        K.unmountObject(this.instance, this.props);\n    }\n    render() {\n        return null;\n    }\n    static mountObject(t, e) {\n        const { instanceRef: n, parent: o, _events: s } = v(e), r = new t(_(e, \"geometry\"), _(e, \"properties\"), _(e, \"options\"));\n        if (Object.keys(s).forEach((t)=>j(r, t, s[t])), o && o.geoObjects && \"function\" == typeof o.geoObjects.add) o.geoObjects.add(r);\n        else {\n            if (!o || !o.add || \"function\" != typeof o.add) throw new Error(`No parent found to mount ${e.name}`);\n            o.add(r);\n        }\n        return R(null, n, r), r;\n    }\n    static updateObject(t, e, n) {\n        const { _events: o, instanceRef: s } = v(n), { _events: r, instanceRef: a } = v(e);\n        if (C(n, \"geometry\")) {\n            const o = _(e, \"geometry\", {}), s = _(n, \"geometry\", {});\n            Array.isArray(s) && s !== o ? Array.isArray(s[0]) && \"number\" == typeof s[1] ? (t.geometry.setCoordinates(s[0]), t.geometry.setRadius(s[1])) : t.geometry.setCoordinates(s) : \"object\" == typeof s && (s.coordinates !== o.coordinates && t.geometry.setCoordinates(s.coordinates), s.radius !== o.radius && t.geometry.setRadius(s.radius));\n        }\n        if (C(n, \"properties\")) {\n            const o = _(e, \"properties\"), s = _(n, \"properties\");\n            o !== s && t.properties.set(s);\n        }\n        if (C(n, \"options\")) {\n            const o = _(e, \"options\"), s = _(n, \"options\");\n            o !== s && t.options.set(s);\n        }\n        g(t, r, o), R(a, s, t);\n    }\n    static unmountObject(t, e) {\n        const { instanceRef: n, parent: o, _events: s } = v(e);\n        null !== t && (Object.keys(s).forEach((e)=>O(t, e, s[e])), o.geoObjects && \"function\" == typeof o.geoObjects.remove ? o.geoObjects.remove(t) : o.remove && \"function\" == typeof o.remove && o.remove(t), R(n));\n    }\n}\nconst Q = {\n    modifyConstructor (t) {\n        function e(e, n, o) {\n            t.call(this, {\n                geometry: e,\n                properties: n\n            }, o);\n        }\n        return e.prototype = t.prototype, e;\n    }\n};\nvar X = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(K, r({}, e, {\n        name: \"GeoObject\",\n        dangerZone: Q\n    })), !0, [\n    \"GeoObject\"\n]))), tt = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(K, r({}, e, {\n        name: \"Circle\"\n    })), !0, [\n    \"Circle\"\n]))), et = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(K, r({}, e, {\n        name: \"Placemark\"\n    })), !0, [\n    \"Placemark\"\n]))), nt = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(K, r({}, e, {\n        name: \"Polygon\"\n    })), !0, [\n    \"Polygon\"\n]))), ot = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(K, r({}, e, {\n        name: \"Polyline\"\n    })), !0, [\n    \"Polyline\"\n]))), st = x(l(d((e)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(K, r({}, e, {\n        name: \"Rectangle\"\n    })), !0, [\n    \"Rectangle\"\n])));\n //# sourceMappingURL=react-yandex-maps.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@pbe+react-yandex-maps@1.2.5_react@18.2.0/node_modules/@pbe/react-yandex-maps/dist/react-yandex-maps.esm.js\n");

/***/ })

};
;